steps:
# Steps to pull a docker image for pgadmin, push it to container registry and deploy it to cloud run.
- name: "gcr.io/cloud-builders/docker"
  args: ['pull', 'dpage/pgadmin4']
- name: "gcr.io/cloud-builders/docker"
  args: ['tag', 'dpage/pgadmin4','gcr.io/verdant-cable-348719/pgadmin']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/verdant-cable-348719/pgadmin']
  
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','pg-admin', '--image','gcr.io/verdant-cable-348719/pgadmin', '--region','us-central1', '--add-cloudsql-instances', 'vibrant-victory-346914:us-central1:mypostgres','--platform','managed', '--port','80', '--allow-unauthenticated','--set-env-vars','PGADMIN_DEFAULT_EMAIL=user@gmail.com','--set-env-vars','PGADMIN_DEFAULT_PASSWORD=SuperSecret']
  
# Steps to build a docker image for go-microservice, push it to container registry and deploy it to cloud run.  
- name: "gcr.io/cloud-builders/docker"
  args: ['build', '-t', 'gcr.io/verdant-cable-348719/go-microservice','.']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/verdant-cable-348719/go-microservice']
  
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','go-microservice', '--image','gcr.io/verdant-cable-348719/go-microservice', '--region','us-central1', '--add-cloudsql-instances', 'vibrant-victory-346914:us-central1:mypostgres','--platform','managed', '--port','8080', '--allow-unauthenticated']
images:
- gcr.io/verdant-cable-348719/go-microservice
- gcr.io/verdant-cable-348719/pgadmin

